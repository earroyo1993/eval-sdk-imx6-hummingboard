Index: qt-4.8.4/src/src/plugins/platforms/eglfs/qeglfsscreen.cpp
===================================================================
--- qt-4.8.4.orig/src/src/plugins/platforms/eglfs/qeglfsscreen.cpp	2012-11-23 04:09:55.000000000 -0600
+++ qt-4.8.4/src/src/plugins/platforms/eglfs/qeglfsscreen.cpp	2013-07-18 13:09:05.646455768 -0600
@@ -105,6 +105,12 @@
         qFatal("EGL error");
     }
 
+    int width, height;
+    mNativeDisplay = fbGetDisplayByIndex(0);
+    fbGetDisplayGeometry(mNativeDisplay, &width, &height);
+    mScreenSize.setHeight(height);
+    mScreenSize.setWidth(width);
+
     m_dpy = eglGetDisplay(display);
     if (m_dpy == EGL_NO_DISPLAY) {
         qWarning("Could not open egl display\n");
@@ -164,14 +170,15 @@
     EGLConfig config = q_configFromQPlatformWindowFormat(m_dpy, platformFormat);
 
     EGLNativeWindowType eglWindow = 0;
-#ifdef Q_OPENKODE
+/*#ifdef Q_OPENKODE
     if (kdInitializeNV() == KD_ENOTINITIALIZED) {
         qFatal("Did not manage to initialize openkode");
     }
     KDWindow *window = kdCreateWindow(m_dpy,config,0);
 
     kdRealizeWindow(window,&eglWindow);
-#endif
+#endif*/
+    eglWindow = fbCreateWindow(mNativeDisplay, 0, 0, mScreenSize.width(), mScreenSize.height());
 
     m_surface = eglCreateWindowSurface(m_dpy, config, eglWindow, NULL);
     if (m_surface == EGL_NO_SURFACE) {
Index: qt-4.8.4/src/src/plugins/platforms/eglfs/qeglfsscreen.h
===================================================================
--- qt-4.8.4.orig/src/src/plugins/platforms/eglfs/qeglfsscreen.h	2012-11-23 04:09:55.000000000 -0600
+++ qt-4.8.4/src/src/plugins/platforms/eglfs/qeglfsscreen.h	2013-07-18 13:08:14.390455432 -0600
@@ -74,6 +74,8 @@
     QPlatformGLContext *m_platformContext;
     EGLDisplay m_dpy;
     EGLSurface m_surface;
+    EGLNativeDisplayType mNativeDisplay;
+    QSize mScreenSize;
 };
 
 QT_END_NAMESPACE
